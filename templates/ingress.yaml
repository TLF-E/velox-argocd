
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-api
  namespace: {{ .Values.namespace }}
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.certificateArn }}
    alb.ingress.kubernetes.io/load-balancer-name: {{ .Values.loadBalancerName }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=61
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=60
    alb.ingress.kubernetes.io/healthcheck-path: /api/doc
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/tags: project=velox,Name=ingress,Namespace=velox,Stage=prod
    alb.ingress.kubernetes.io/group.name: velox-prod
    alb.ingress.kubernetes.io/security-groups: '{{ .Values.securityGroups }}'
spec:
  ingressClassName: alb
  rules:
    - host: "{{ .Values.apiHost }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: velox-api
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-front
  namespace: {{ .Values.namespace }}
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.certificateArn }}
    alb.ingress.kubernetes.io/load-balancer-name: {{ .Values.loadBalancerName }}
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/group.name: velox-prod
spec:
  ingressClassName: alb
  rules:
    - host: "{{ .Values.frontHost }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: velox-front
                port:
                  number: 80
